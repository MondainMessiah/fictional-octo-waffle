import os
import requests
from bs4 import BeautifulSoup
from datetime import datetime

def send_to_discord(message: str):
    webhook_url = os.environ.get("DISCORD_WEBHOOK_URL")
    if not webhook_url:
        print("Missing Discord webhook URL.")
        return
    requests.post(webhook_url, json={"content": message})

def scrape_boosted_creature():
    url = "https://www.tibia.com/news/?subtopic=creatureboost"
    response = requests.get(url)
    soup = BeautifulSoup(response.text, "html.parser")

    boosted_section = soup.find("div", class_="NewsHeadline")
    if not boosted_section:
        return "❌ Could not find boosted creature."

    creature_img = boosted_section.find("img")
    if creature_img:
        alt_text = creature_img.get("title") or creature_img.get("alt")
        return f"🦴 Boosted Creature: **{alt_text}**"
    return "❌ Boosted creature not found."

def scrape_boosted_boss():
    url = "https://www.tibia.com/news/?subtopic=bosstiaryboost"
    response = requests.get(url)
    soup = BeautifulSoup(response.text, "html.parser")

    boosted_section = soup.find("div", class_="NewsHeadline")
    if not boosted_section:
        return "❌ Could not find boosted boss."

    boss_img = boosted_section.find("img")
    if boss_img:
        alt_text = boss_img.get("title") or boss_img.get("alt")
        return f"👑 Boosted Boss: **{alt_text}**"
    return "❌ Boosted boss not found."

if __name__ == "__main__":
    date_str = datetime.now().strftime("%Y-%m-%d")
    creature = scrape_boosted_creature()
    boss = scrape_boosted_boss()

    message = f"📅 **Tibia Boosts for {date_str}**\n{creature}\n{boss}"
    print("Posting message to Discord:\n", message)
    send_to_discord(message)
